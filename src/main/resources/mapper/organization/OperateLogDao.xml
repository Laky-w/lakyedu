<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laky.edu.log.dao.OperateLogDao" >
  <resultMap id="BaseResultMap" type="com.laky.edu.log.bean.OperateLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="operate_person" property="operatePerson" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="the_type" property="theType" jdbcType="TINYINT" />
    <result column="branch_id" property="branchId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="school_zone_id" property="schoolZoneId" jdbcType="INTEGER" />
    <association property="schoolZone" column="school_zone_id" javaType="com.laky.edu.organization.bean.SchoolZone" resultMap="SchoolZoneMap" />
    <association property="user" column="account_id" javaType="com.laky.edu.organization.bean.User" resultMap="UserMap" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.laky.edu.log.bean.OperateLog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="SchoolZoneMap" type="com.laky.edu.organization.bean.SchoolZone">
    <id property="id" column="id" />
    <result property="name" column="sz_name" />
  </resultMap>
  <resultMap id="UserMap" type="com.laky.edu.organization.bean.User">
    <id property="id" column="id" />
    <result property="name" column="u_name" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, operate_person, title, the_type, branch_id, account_id, school_zone_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>

  <select id="queryOperateLogAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT s.*,u.`name` as u_name,sz.`name` as sz_name from  laky_core_operate_log s RIGHT JOIN laky_organization_user u on s.account_id = u.id and u.the_status !=0

    LEFT JOIN laky_organization_school_zone sz on s.school_zone_id = sz.id and sz.the_status =1
    <where>
      s.branch_id = #{branchId,jdbcType=INTEGER}
      <if test="userName != null">
        AND u.`name` LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
      </if>
      <if test="theType != null">
        AND s.the_type = #{theType,jdbcType=TINYINT}
      </if>
      <if test="schoolZoneId != null">
        AND s.school_zone_id IN
        <foreach collection="schoolZoneId" item="schoolId" index="index"
                 open="(" close=")" separator=",">
          #{schoolId}
        </foreach>
      </if>
      <if test="schoolZoneId2 != null">
        <if test="schoolZoneId2 instanceof String">
          AND s.school_zone_id = #{schoolZoneId2,jdbcType=INTEGER}
        </if>
        <if test="!(schoolZoneId2 instanceof String)">
          AND s.school_zone_id IN
          <foreach collection="schoolZoneId2" item="schoolId" index="index"
                   open="(" close=")" separator=",">
            #{schoolId}
          </foreach>
        </if>
      </if>
      <if test="theDate != null">
        AND s.create_time &gt;= #{theDate[0],jdbcType=TIMESTAMP}
        AND s.create_time &lt;= #{theDate[1],jdbcType=TIMESTAMP}
      </if>
    </where>
    ORDER BY s.create_time DESC
  </select>
  <insert id="insertOperateLog" parameterType="com.laky.edu.log.bean.OperateLog" useGeneratedKeys="true" keyProperty="id"
          keyColumn="id">
    insert into laky_core_operate_log ( create_time, operate_person,
      title, the_type, branch_id, 
      account_id, school_zone_id, content
      )
    values ( #{createTime,jdbcType=TIMESTAMP}, #{operatePerson,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR}, #{theType,jdbcType=TINYINT}, #{branchId,jdbcType=INTEGER}, 
      #{accountId,jdbcType=INTEGER}, #{schoolZoneId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
</mapper>