<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laky.edu.organization.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.laky.edu.organization.bean.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="the_status" property="theStatus" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="branch_id" property="branchId" jdbcType="INTEGER" />
    <result column="the_type" property="theType" jdbcType="TINYINT" />
    <association property="schoolZone" column="school_zone_id" javaType="com.laky.edu.organization.bean.SchoolZone" resultMap="SchoolZoneMap" />
    <association property="createUser" column="create_user_id" javaType="com.laky.edu.organization.bean.User" resultMap="UserMap" />
  </resultMap>
  <resultMap id="SchoolZoneMap" type="com.laky.edu.organization.bean.SchoolZone">
    <id property="id" column="id" />
    <result property="name" column="sz_name" />
  </resultMap>
  <resultMap id="UserMap" type="com.laky.edu.organization.bean.User">
    <id property="id" column="id" />
    <result property="name" column="u_name" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, the_status, create_time, create_user_id, school_id, branch_id, the_type
  </sql>
  <select id="queryRoleById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from laky_organization_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryRoleByParameter" resultMap="BaseResultMap" >
    SELECT s.*,u.`name` as u_name,sz.`name` as sz_name from laky_organization_role s
    RIGHT JOIN laky_organization_user u on s.create_user_id = u.id and u.the_status !=0
    <!--<if test="userName != null">-->
      <!--AND u.`name` LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')-->
    <!--</if>-->
    LEFT JOIN laky_organization_school_zone sz on s.school_id = sz.id and sz.the_status !=0
    where s.the_status !=0
    <if test="name != null">
    AND s.`name` LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="schoolZoneId != null">
      AND s.school_id IN
      <foreach collection="schoolZoneId" item="schoolId" index="index"
               open="(" close=")" separator=",">
        #{schoolId}
      </foreach>
    </if>
    <if test="schoolZoneId2 != null">
      <if test="schoolZoneId2 instanceof String">
        AND s.school_id = #{schoolZoneId2,jdbcType=INTEGER}
      </if>
      <if test="!(schoolZoneId2 instanceof String)">
        AND s.school_id IN
        <foreach collection="schoolZoneId2" item="schoolId" index="index"
                 open="(" close=")" separator=",">
          #{schoolId}
        </foreach>
      </if>
    </if>
     and s.branch_id = #{branchId}
  </select>
  <insert id="insertRole" parameterType="com.laky.edu.organization.bean.Role" useGeneratedKeys="true" keyProperty="id"
          keyColumn="id">
    insert into laky_organization_role (name, the_status,
      create_time, create_user_id, school_id, 
      branch_id, the_type)
    values ( #{name,jdbcType=VARCHAR}, #{theStatus,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, 
      #{branchId,jdbcType=INTEGER}, #{theType,jdbcType=TINYINT})
  </insert>
  <update id="updateRole" parameterType="com.laky.edu.organization.bean.Role" >
    update laky_organization_role
    set name = #{name,jdbcType=VARCHAR},
      the_status = #{theStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      the_type = #{theType,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>